{"ast":null,"code":"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport requests from '../Requests';\nconst Row2 = () => {\n  const axios = require('axios');\n  const testConnection = async () => {\n    try {\n      const response = await axios.get('https://anilist.co/api/v2/user');\n      console.log('Connection successful!');\n      console.log('Response data:', response.data);\n    } catch (error) {\n      console.error('Connection failed:', error.message);\n    }\n  };\n  testConnection();\n  return /*#__PURE__*/React.createElement(\"div\", null, \"Row2\");\n};\nexport default Row2;","map":{"version":3,"names":["axios","React","useEffect","useState","requests","Row2","require","testConnection","response","get","console","log","data","error","message","createElement"],"sources":["D:/webVS/movies-anime/src/components/Row2.js"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport requests from '../Requests'\r\n\r\nconst Row2 = () => {\r\n  const axios = require('axios');\r\n\r\n  const testConnection = async () => {\r\n    try {\r\n      const response = await axios.get('https://anilist.co/api/v2/user');\r\n      console.log('Connection successful!');\r\n      console.log('Response data:', response.data);\r\n    } catch (error) {\r\n      console.error('Connection failed:', error.message);\r\n    }\r\n  };\r\n  \r\n  testConnection();\r\n\r\n\r\n  return (\r\n    <div>Row2</div>\r\n  )\r\n}\r\n\r\nexport default Row2"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,aAAa;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAML,KAAK,GAAGM,OAAO,CAAC,OAAO,CAAC;EAE9B,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,gCAAgC,CAAC;MAClEC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACpD;EACF,CAAC;EAEDP,cAAc,CAAC,CAAC;EAGhB,oBACEN,KAAA,CAAAc,aAAA,cAAK,MAAS,CAAC;AAEnB,CAAC;AAED,eAAeV,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}